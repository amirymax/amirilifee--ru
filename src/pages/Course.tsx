
import { useState } from "react";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import Navbar from "@/components/Navbar";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Check, X, Star, Users, Code, Bot, Award, Clock, MessageSquare } from "lucide-react";
import { useToast } from "@/components/ui/use-toast";

const BOT_TOKEN = "7896528015:AAFo6wn_cAPwqiffhqwOAnJhiRWYvrdn7zc";
const CHAT_ID = "1007463279";
const TELEGRAM_API_URL = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;


const Course = () => {
  const { toast } = useToast();
  const [formData, setFormData] = useState({
    name: "",
    telegram: "",
    plan: "",
    message: "",
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    const message = `
  üìù <strong>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞:</strong>
  üë§ <strong>–ò–º—è</strong>: ${formData.name}
  üìß <strong>–¢–ê–†–ò–§</strong>: ${formData.plan}
  üì± <strong>–¢–µ–ª–µ–≥—Ä–∞–º</strong>: ${formData.telegram}
  üí¨ <strong>–°–æ–æ–±—â–µ–Ω–∏–µ</strong>: ${formData.message}
`;

    try {
      const response = await fetch(TELEGRAM_API_URL, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: message,
          parse_mode: "HTML",
        }),
      });

      if (!response.ok) {
        throw new Error("Failed to send message");
      }
    
    toast({
      title: "–î–∞—Ä—Ö–æ—Å—Ç —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞ —à—É–¥!",
      description: "–ú–æ –±–æ —à—É–º–æ –¥–∞—Ä –Ω–∞–∑–¥–∏–∫—Ç–∞—Ä–∏–Ω –≤–∞“õ—Ç —Ç–∞–º–æ—Å –º–µ–≥–∏—Ä–µ–º.",
    });

    setFormData({ name: "", plan: "", telegram: "", message: "" });
    }
    catch (error) {
      toast({
        title: "–ú—É—à–∫–∏–ª”£",
        description: "–î–∞—Ä—Ö–æ—Å—Ç —Ä–∞–≤–æ–Ω –∫–∞—Ä–¥–∞ –Ω–∞—à—É–¥, –∏–ª—Ç–∏–º–æ—Å —à–∞—Ö—Å–∞–Ω –¥–∞—Ä —Ç–µ–ª–µ–≥—Ä–∞–º –Ω–∞–≤–∏—Å–µ–¥"
      });
  };}

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>
  ) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const pricingPlans = [
    {
      name: ">_CODE: Minimum",
      price: "350",
      strikePrice: "400",
      currency: "TJS",
      period: "–¥–∞—Å—Ç—Ä–∞—Å”£ 3 –º–æ“≥",
      description: "–ë–∞—Ä–æ–∏ —à—É—Ä”Ø—ä –∫–∞—Ä–¥–∞–Ω–∏ —Å–∞—Ñ–∞—Ä–∏ –±–∞—Ä–Ω–æ–º–∞—Å–æ–∑”£",
      features: [
        { text: "–ü–∞—Ä–¥–æ—Ö—Ç 1 –±–æ—Ä", included: true },
        { text: "–î–∞—Å—Ç—Ä–∞—Å”£ –±–∞ –≤–∏–¥–µ–æ–¥–∞—Ä—Å“≥–æ", included: true },
        { text: "–ö–æ—Ä“≥–æ–∏ –∞–º–∞–ª”£", included: true },
        { text: "–ú–∞–≤–æ–¥–∏ —Ç–∞—ä–ª–∏–º”£", included: true },
        { text: "–ú–∞–≤–æ–¥–∏ –∏–ª–æ–≤–∞–≥”£", included: false },
        { text: "–ú–µ–Ω—Ç–æ—Ä–∏ —à–∞—Ö—Å”£", included: false },
        { text: "–ì—É—Ä”Ø“≥ –±–∞—Ä–æ–∏ —Å–∞–≤–æ–ª—É “∑–∞–≤–æ–±", included: false },
        { text: "–î–∞—Å—Ç—Ä–∞—Å–∏–∏ –∞–±–∞–¥”£", included: false },
        { text: "–í–∞–∑–∏—Ñ–∞–∏ –º—É—Å—Ç–∞“õ–∏–ª–æ–Ω–∞", included: false },
        { text: "–í–∞“õ—Ç–∏ —Ö–æ–Ω–¥–∞–Ω –∏—Ö—Ç–∏—ë—Ä”£", included: true },
        { text: "–ú–∞—Å–ª–∏“≥–∞—Ç“≥–æ –±–∞—ä–¥–∏ —Ç–∞–º–æ–º –∫–∞—Ä–¥–∞–Ω–∏ –∫—É—Ä—Å", included: true },
        { text: "–¢–µ—Å—Ç“≥–æ–∏ —Ö—É–¥—Å–∞–Ω“∑–∏—à”£", included: false },
        { text: "–ó–∞–Ω–≥“≥–æ–∏ –≥—É—Ä”Ø“≥”£", included: false },
      ],
      cardClass: "bg-gray-900 text-white border-gray-700",
      buttonClass: "bg-white text-gray-900 hover:bg-gray-100",
    },
    {
      name: ">_CODE: PRO",
      price: "399",
      strikePrice: "500",
      currency: "TJS",
      period: "–¥–∞—Å—Ç—Ä–∞—Å–∏–∏ –∞–±–∞–¥”£",
      description: "–ë–æ –¥–∞—Å—Ç–≥–∏—Ä–∏–∏ —à–∞—Ö—Å”£ –≤–∞ –ø–µ—à–Ω–∏“≥–æ–¥“≥–æ",
      popular: true,
      features: [
        { text: "–ü–∞—Ä–¥–æ—Ö—Ç 1 –±–æ—Ä", included: true },
        { text: "–î–∞—Å—Ç—Ä–∞—Å”£ –±–∞ –≤–∏–¥–µ–æ–¥–∞—Ä—Å“≥–æ", included: true },
        { text: "–ö–æ—Ä“≥–æ–∏ –∞–º–∞–ª”£", included: true },
        { text: "–ú–∞–≤–æ–¥–∏ —Ç–∞—ä–ª–∏–º”£", included: true },
        { text: "–ú–∞–≤–æ–¥–∏ –∏–ª–æ–≤–∞–≥”£", included: true },
        { text: "–ú–µ–Ω—Ç–æ—Ä–∏ —à–∞—Ö—Å”£", included: true },
        { text: "–ì—É—Ä”Ø“≥ –±–∞—Ä–æ–∏ —Å–∞–≤–æ–ª—É “∑–∞–≤–æ–±", included: true },
        { text: "–î–∞—Å—Ç—Ä–∞—Å–∏–∏ –∞–±–∞–¥”£", included: true },
        { text: "–í–∞–∑–∏—Ñ–∞–∏ –º—É—Å—Ç–∞“õ–∏–ª–æ–Ω–∞", included: true },
        { text: "–í–∞“õ—Ç–∏ —Ö–æ–Ω–¥–∞–Ω –∏—Ö—Ç–∏—ë—Ä”£", included: true },
        { text: "–ú–∞—Å–ª–∏“≥–∞—Ç“≥–æ –±–∞—ä–¥–∏ —Ç–∞–º–æ–º –∫–∞—Ä–¥–∞–Ω–∏ –∫—É—Ä—Å", included: true },
        { text: "–¢–µ—Å—Ç“≥–æ–∏ —Ö—É–¥—Å–∞–Ω“∑–∏—à”£", included: true },
        { text: "–ó–∞–Ω–≥“≥–æ–∏ —à–∞—Ö—Å”£", included: false },
        { text: "–ó–∞–Ω–≥“≥–æ–∏ –≥—É—Ä”Ø“≥”£", included: true },

      ],
      cardClass: "bg-white text-gray-900 border-2 border-primary shadow-xl relative",
      buttonClass: "bg-primary text-white hover:bg-primary/90",
    },
    {
      name: "–ú–µ–Ω—Ç–æ—Ä–∏ –®–ê–•–°”¢",
      price: "150",
      currency: "TJS/–¥–∞—Ä—Å",
      strikePrice: "250",
      period: "–¥–∞—Ä—Å“≥–æ–∏ —à–∞—Ö—Å”£",
      description: "–î–∞—Ä—Å“≥–æ–∏ —à–∞—Ö—Å”£ –±–æ –ê–º–∏—Ä”£",
      features: [
        { text: "–ë–∞—Ä–Ω–æ–º–∞–∏ —Ñ–∞—Ä–¥”£", included: true },
        { text: "–î–∞—Ä—Å“≥–æ–∏ —à–∞—Ö—Å”£ –±–æ –º–µ–Ω—Ç–æ—Ä", included: true },
        { text: "–õ–æ–∏“≥–∞“≥–æ–∏ –≤–æ“õ–µ”£", included: true },
        { text: "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ–∏ —à–∞—Ö—Å”£", included: true },
        { text: "–î–∞—Å—Ç–≥–∏—Ä–∏–∏ –¥–æ–∏–º”£", included: true },
        { text: "–ú–∞—Å–ª–∏“≥–∞—Ç–∏ –∫–∞—Å–±”£", included: true },
        { text: "–î–∞—Å—Ç—Ä–∞—Å”£ –±–∞ —Å–∞–±—Ç–∏ –¥–∞—Ä—Å", included: true },
        { text: "–ö–æ—Ä“≥–æ–∏ –∞–º–∞–ª”£", included: true },
        { text: "–ú–∞–≤–æ–¥–∏ —Ç–∞—ä–ª–∏–º”£", included: true },
        { text: "–ú–∞–≤–æ–¥–∏ –∏–ª–æ–≤–∞–≥”£", included: true },
        { text: "–ú–µ–Ω—Ç–æ—Ä–∏ —à–∞—Ö—Å”£", included: true },
        { text: "–í–∞–∑–∏—Ñ–∞–∏ –º—É—Å—Ç–∞“õ–∏–ª–æ–Ω–∞", included: true },
        { text: "–í–∞“õ—Ç–∏ —Ö–æ–Ω–¥–∞–Ω –∏—Ö—Ç–∏—ë—Ä”£", included: true },
        { text: "–ú–∞—Å–ª–∏“≥–∞—Ç“≥–æ –±–∞—ä–¥–∏ —Ç–∞–º–æ–º –∫–∞—Ä–¥–∞–Ω–∏ –∫—É—Ä—Å", included: true },
        { text: "–ó–∞–Ω–≥“≥–æ–∏ —à–∞—Ö—Å”£", included: true },
      ],
      cardClass: "bg-red-600 text-white border-red-500",
      buttonClass: "bg-white text-red-600 hover:bg-gray-100",
    },
  ];

  const benefits = [
    {
      icon: <Award className="h-6 w-6" />,
      title: "–û–º”Ø–∑–≥–æ—Ä –±–æ —Ç–∞“∑—Ä–∏–±–∞–∏ 5+ —Å–æ–ª–∞",
      description: "–¢–∞“∑—Ä–∏–±–∞–∏ –∞–º–∞–ª”£ –¥–∞—Ä —Å–æ—Ö—Ç–∞–Ω–∏ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç“≥–æ, –±–∞—Ä–Ω–æ–º–∞“≥–æ –≤–∞ —Å–∞–π—Ç“≥–æ"
    },
    {
      icon: <Code className="h-6 w-6" />,
      title: "–ê–º–∞–ª–∏—ë—Ç–∏ –≤–æ“õ–µ”£ –≤–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
      description: "–ü—Ä–æ–µ–∫—Ç“≥–æ–∏ –≤–æ“õ–µ”£ –±–∞—Ä–æ–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ–∏ —à—É–º–æ"
    },
    {
      icon: <Bot className="h-6 w-6" />,
      title: "–°–æ—Ö—Ç–∞–Ω–∏ –±–æ—Ç“≥–æ –∞–∑ —Å–∏—Ñ—Ä",
      description: "–û–º”Ø–∑–∏—à–∏ –ø—É—Ä—Ä–∞–∏ —Å–æ—Ö—Ç–∞–Ω–∏ –±–æ—Ç“≥–æ–∏ Telegram"
    },
    {
      icon: <MessageSquare className="h-6 w-6" />,
      title: "–Å—Ä–¥–∞–º –∞–∑ –ú–µ–Ω—Ç–æ—Ä",
      description: "–ë–∞“≥–æ–≥—É–∑–æ—Ä”£ –≤–∞ –º–∞—Å–ª–∏“≥–∞—Ç –¥–∞—Ä “≥–∞—Ä “õ–∞–¥–∞–º"
    }
  ];

   const courseProgram = [
    {
      title: "–ê—Å–æ—Å“≥–æ–∏ Python",
      items: [
        "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –≤–∞ –Ω–æ–∏–ª“≥–æ–∏ –∞—Å–æ—Å”£",
        "–†—É—à–¥“≥–æ –≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞“≥–æ–∏ –¥–æ–¥–∞“≥–æ",
        "–¢–∞–≥–π–∏—Ä—ë–±–∞–Ω–¥–∞“≥–æ –≤–∞ —Ç–∏–ø–∏ –¥–æ–¥–∞“≥–æ",
        "–ê–º–∞–ª“≥–æ –±–æ —Ç–∏–ø–∏ –∞–¥–∞–¥“≥–æ –≤–∞ —Å–∞—Ç—Ä“≥–æ",
        "–î–æ“≥–∏–ª –∫–∞—Ä–¥–∞–Ω –≤–∞ –±–∞—Ä–æ–≤–∞—Ä–¥–∞–Ω–∏ –¥–æ–¥–∞“≥–æ",
        "–û–ø–µ—Ä–∞—Ç–æ—Ä“≥–æ–∏ —à–∞—Ä—Ç”£ (if-elif-else)",
        "–î–∞–≤—Ä“≥–æ (for-while loops)",
        "–ö–æ—Ä –±–æ —Ä”Ø–π—Ö–∞—Ç –≤–∞ –ª—É“ì–∞—Ç",
        "–§—É–Ω–∫—Å–∏—è“≥–æ –≤–∞ –º–æ–¥—É–ª“≥–æ",
        "–ò–º–ø–æ—Ä—Ç –∫–∞—Ä–¥–∞–Ω–∏ –∫–∏—Ç–æ–±—Ö–æ–Ω–∞“≥–æ–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç”£ –≤–∞ –±–µ—Ä—É–Ω”£",
        "–ö–æ—Ä –±–æ —Ñ–∞–π–ª“≥–æ (Json)",
        "–°–æ—Ö—Ç–∞–Ω–∏ –±–∞—Ä–Ω–æ–º–∞–∏ –∫–æ–Ω—Å–æ–ª”£",
        "–ë–∞—Ä–Ω–æ–º–∞—Å–æ–∑–∏–∏ –û–±—ä–µ–∫—Ç-–æ—Ä–∏–µ–Ω—Ç",
        "–•–∞—Ç–æ–≥–∏“≥–æ –≤–∞ –∏—Å—Ç–∏—Å–Ω–æ“≥–æ"
      ]
    },
    {
      title: "Telegram Bot API",
      items: [
        "–¢–∞–Ω–∑–∏–º–∏ –º—É“≥–∏—Ç–∏ –∫–æ—Ä",
        "BotFather –≤–∞ —Ç–æ–∫–µ–Ω–∏ –±–æ—Ç",
        "–ö–∏—Ç–æ–±—Ö–æ–Ω–∞–∏ aiogram",
        "–ü—Ä–∏–Ω—Å–∏–ø—Ö–æ–∏ –∞—Å–æ—Å–∏–∏ –∫–æ—Ä aiogram",
        "–°–æ—Ö—Ç–∞–Ω–∏ —è–∫—É–º–∏–Ω –±–æ—Ç –≤–∞ –∫–æ—Ä–∫–∞—Ä–¥–∏ –∫–æ–º–∞–Ω–¥–∞“≥–æ–∏ –æ–¥–¥”£",
        "–ö–∏—Ç–æ–±—Ö–æ–Ω–∞–∏ aiogram",
        "–ö–∏—Ç–æ–±—Ö–æ–Ω–∞–∏ aiogram",
        "Keyboard –≤–∞ InlineKeyboard",
        "–ö–æ—Ä –±–æ –º–µ–¥–∏–∞ –≤–∞ —Ñ–∞–π–ª“≥–æ"
      ]
    },
    {
      title: "–õ–æ–∏“≥–∞“≥–æ–∏ –∞–º–∞–ª”£ –≤–∞ –∏–ª–æ–≤–∞–≥”£",
      items: [
        "Delivery –ë–æ—Ç",
        "–§–∞—Ä–º–æ–Ω–∏ –±–æ—Ç –∞–∑ –ê–º—Ä–∏–∫–æ",
        "–ë–æ—Ç –∞–∑ –î—É—à–∞–Ω–±–µ",
        "–ë–æ—Ç –±–∞—Ä–æ–∏ –∞–Ω–∫–µ—Ç–∞",
        "–°–µ—Ä–≤–µ—Ä",
        "–î–µ–ø–ª–æ–π –≤–∞ —Ö–æ—Å—Ç–∏–Ω–≥",
        "–¢–∞—Ä–∑–∏ –¥—É—Ä—É—Å—Ç–∏ –Ω–∞—Ä—Ö –º–æ–Ω–¥–∞–Ω–∏ –±–æ—Ç",
        "–°”Ø“≥–±–∞—Ç –±–æ –∫–ª–∏–µ–Ω—Ç",
        "Github",
        "VS Code",        
      ]
    }
  ];

  return (
    <div>
        <div id='top'></div>
      <Navbar />
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-violet-800">
      {/* Header Section */}
      <section className="relative overflow-hidden py-32 px-4">
        <div className="absolute inset-0 bg-gradient-to-r from-purple-600/20 to-pink-600/20" />
        <div className="container mx-auto text-center relative z-10">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h1 className="text-4xl md:text-6xl font-bold text-white mb-6 leading-tight">
              &#x1F525; –ö—É—Ä—Å–∏ &gt;_CODE: –ê–∑ 0 —Ç–æ –ë–û–¢–°–û–ó”¢ &#x1F525;
            </h1>
            <p className="text-xl md:text-2xl text-gray-200 mb-8 max-w-3xl mx-auto">
              –ë–∞—Ä–Ω–æ–º–∞–∏ –æ–º”Ø–∑–∏—à”£ –±–∞—Ä–æ–∏ –æ–Ω“≥–æ–µ, –∫–∏ –æ—Ä–∑—É –¥–æ—Ä–∞–Ω–¥ –ë–ê–†–ù–û–ú–ê–°–û–ó —à–∞–≤–∞–Ω–¥!
            </p>
            <div className="flex flex-wrap gap-4 justify-center">
              <Badge variant="secondary" className="px-4 py-2 text-lg">
                <Users className="h-4 w-4 mr-2" />
                350+ —Ö–∞—Ç–º–∫–∞—Ä–¥–∞–≥–æ–Ω
              </Badge>
              <Badge variant="secondary" className="px-4 py-2 text-lg">
                <Star className="h-4 w-4 mr-2" />
                –ê–∑ —Å–∏—Ñ—Ä —Ç–æ –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å
              </Badge>
              <Badge variant="secondary" className="px-4 py-2 text-lg">
                <Clock className="h-4 w-4 mr-2" />
                –î–∞—Å—Ç—Ä–∞—Å–∏–∏ 24/7
              </Badge>
            </div>
          </motion.div>
        </div>
      </section>

       {/* Course Program Section */}
      <section className="py-16 px-4">
        <div className="container mx-auto">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-3xl md:text-4xl font-bold text-white text-center mb-12"
          >
            –ë–∞—Ä–Ω–æ–º–∞–∏ –∫—É—Ä—Å
          </motion.h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            {courseProgram.map((module, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.2 }}
                viewport={{ once: true }}
                className="glass rounded-lg p-6"
              >
                <h3 className="text-xl font-bold text-white mb-6 text-center">
                  {module.title}
                </h3>
                <ul className="space-y-3">
                  {module.items.map((item, itemIndex) => (
                    <li key={itemIndex} className="flex items-start gap-3">
                      <div className="w-2 h-2 bg-primary rounded-full mt-2 flex-shrink-0"></div>
                      <span className="text-gray-300 text-sm">{item}</span>
                    </li>
                  ))}
                </ul>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Benefits Section */}
      <section className="py-16 px-4 bg-white/5 backdrop-blur-sm">
        <div className="container mx-auto">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-3xl md:text-4xl font-bold text-white text-center mb-12"
          >
            –ß–∞—Ä–æ –∫—É—Ä—Å–∏ –º–æ—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥?
          </motion.h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {benefits.map((benefit, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
                className="text-center p-6 glass rounded-lg"
              >
                <div className="inline-flex items-center justify-center w-12 h-12 bg-primary rounded-lg mb-4">
                  {benefit.icon}
                </div>
                <h3 className="text-lg font-semibold text-white mb-2">
                  {benefit.title}
                </h3>
                <p className="text-gray-300 text-sm">
                  {benefit.description}
                </p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Pricing Section */}
      <section className="py-16 px-4">
        <div className="container mx-auto">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-3xl md:text-4xl font-bold text-white text-center mb-12"
          >
            –ù–∞—Ä—Ö“≥–æ–∏ –∫—É—Ä—Å
          </motion.h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            {pricingPlans.map((plan, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.2 }}
                viewport={{ once: true }}
                className="relative"
              >
                {plan.popular && (
                  <div className="absolute -top-4 left-1/2 transform -translate-x-1/2 z-10">
                    <Badge className="bg-primary text-white px-4 py-1 text-sm font-medium">
                      –ü–û–ü–£–õ–Ø–†–ù–´–ô
                    </Badge>
                  </div>
                )}
                <Card className={`h-full ${plan.cardClass} transition-transform hover:scale-105`}>
                  <CardHeader className="text-center pb-4">
                    <CardTitle className="text-2xl font-bold mb-2">
                      {plan.name}
                    </CardTitle>
                    <div className="text-2xl line-through mb-2">
                      {plan.strikePrice}
                      {plan.currency && <span className="text-2xl ml-1">{plan.currency}</span>}
                    </div>
                    <div className="text-4xl font-bold mb-2">
                      {plan.price}
                      {plan.currency && <span className="text-lg ml-1">{plan.currency}</span>}
                    </div>
                    <p className="text-sm opacity-80">{plan.period}</p>
                    <p className="text-sm mt-2">{plan.description}</p>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="space-y-3">
                      {plan.features.map((feature, featureIndex) => (
                        <div key={featureIndex} className="flex items-center gap-3">
                          {feature.included ? (
                            <Check className="h-5 w-5 text-green-500 flex-shrink-0" />
                          ) : (
                            <X className="h-5 w-5 text-red-500 flex-shrink-0" />
                          )}
                          <span className={`text-sm ${!feature.included ? 'opacity-50 line-through' : ''}`}>
                            {feature.text}
                          </span>
                        </div>
                      ))}
                    </div>
                    <Button
                      className={`w-full mt-6 ${plan.buttonClass}`}
                      onClick={() => {
                        const buyingSection = document.getElementById('buy');
                        if (buyingSection) {
                          buyingSection.scrollIntoView({ behavior: 'smooth' });
                        }
                      }}
                    >
                      –ò–Ω—Ç–∏—Ö–æ–± –∫–∞—Ä–¥–∞–Ω
                    </Button>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Signup Form Section */}
      <section id="buy" className="py-16 px-4 bg-white/5 backdrop-blur-sm">
        <div className="container mx-auto max-w-2xl">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center mb-8"
          >
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
              “≤–æ–∑–∏—Ä –±–∞ –∫—É—Ä—Å –≤–æ—Ä–∏–¥ —à–∞–≤–µ–¥!
            </h2>
            <p className="text-gray-300">
              –§–æ—Ä–º—Ä–æ –ø—É—Ä –∫—É–Ω–µ–¥ –≤–∞ –º–æ –±–æ —à—É–º–æ —Ç–∞–º–æ—Å –º–µ–≥–∏—Ä–µ–º
            </p>
          </motion.div>

          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
          >
            <Card className="glass border-0">
              <CardContent className="p-8">
                <form onSubmit={handleSubmit} className="space-y-6">
                  <div>
                    <Input
                      placeholder="–ù–æ–º–∏ —à—É–º–æ"
                      name="name"
                      value={formData.name}
                      onChange={handleChange}
                      required
                      className="bg-white/10 border-white/20 text-white placeholder:text-gray-300"
                    />
                  </div>
                  <div>
                    <Input
                      placeholder="–ù–∏–∫–∏ Telegram (@username)"
                      name="telegram"
                      value={formData.telegram}
                      onChange={handleChange}
                      required
                      className="bg-white/10 border-white/20 text-white placeholder:text-gray-300"
                    />
                  </div>
                  <div>
                    <select
                      name="plan"
                      value={formData.plan}
                      onChange={handleChange}
                      required
                      className="w-full h-10 px-3 py-2 rounded-md bg-white/10 border border-white/20 text-white"
                    >
                      <option value="" className="text-gray-900">–ù–∞—Ä—Ö—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥</option>
                      <option value="CODE: Mini" className="text-gray-900">&gt;CODE: Mini - 350 TJS</option>
                      <option value="CODE: PRO" className="text-gray-900">&gt;CODE: PRO - 399 TJS</option>
                      <option value="–®–ê–•–°”¢" className="text-gray-900">–®–ê–•–°”¢ - 150TJS/–¥–∞—Ä—Å</option>
                    </select>
                  </div>
                  <div>
                    <Textarea
                      placeholder="–ü–∞—ë–º–∏ —à—É–º–æ (–∏—Ö—Ç–∏—ë—Ä”£)"
                      name="message"
                      value={formData.message}
                      onChange={handleChange}
                      className="bg-white/10 border-white/20 text-white placeholder:text-gray-300 min-h-[100px]"
                    />
                  </div>
                  <Button type="submit" className="w-full bg-primary hover:bg-primary/90 text-white text-lg py-3">
                    üì© –î–∞—Ä—Å—Ä–æ —Å–∞—Ä –∫–∞—Ä–¥–∞–Ω
                  </Button>
                </form>
              </CardContent>
            </Card>
          </motion.div>
        </div>
      </section>
    </div>
    </div>
  );
};

export default Course;